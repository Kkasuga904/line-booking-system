/**
 * ‰∫àÁ¥ÑÈÄöÁü•„Ç∑„Çπ„ÉÜ„É†
 * LINE„Åã„Çâ„ÅÆ‰∫àÁ¥Ñ„Çí„É™„Ç¢„É´„Çø„Ç§„É†„ÅßÈÄöÁü•
 */

class NotificationSystem {
    constructor() {
        this.notifications = [];
        this.unreadCount = 0;
        this.isPolling = false;
        this.pollInterval = null;
        this.lastCheckTime = new Date().toISOString();
        this.notificationSound = new Audio('data:audio/wav;base64,UklGRjIAAABXQVZFZm10IBAAAAABAAEAQB8AAEAfAAABAAgAZGF0YQ4AAAD/AP8A/wD/AP8A/wD/AP8A');
    }

    /**
     * ÈÄöÁü•„Ç∑„Çπ„ÉÜ„É†„ÇíÂàùÊúüÂåñ
     */
    async init() {
        console.log('üîî Notification System - Initializing...');
        
        // „Éñ„É©„Ç¶„Ç∂ÈÄöÁü•„ÅÆË®±ÂèØ„ÇíÂèñÂæó
        if ('Notification' in window && Notification.permission === 'default') {
            await Notification.requestPermission();
        }
        
        // Êó¢Â≠ò„ÅÆÈÄöÁü•„ÇíË™≠„ÅøËæº„Åø
        await this.loadNotifications();
        
        // „Éù„Éº„É™„É≥„Ç∞ÈñãÂßã
        this.startPolling();
        
        // UIË¶ÅÁ¥†„ÇíË®≠ÂÆö
        this.setupUI();
        
        console.log('‚úÖ Notification System - Ready');
    }

    /**
     * UI„Çí„Çª„ÉÉ„Éà„Ç¢„ÉÉ„Éó
     */
    setupUI() {
        // ÈÄöÁü•„Éê„ÉÉ„Ç∏„ÇíÊõ¥Êñ∞
        this.updateBadge();
        
        // ÈÄöÁü•„Éë„Éç„É´„ÅÆË°®Á§∫/ÈùûË°®Á§∫
        const notificationBtn = document.getElementById('notificationBtn');
        const notificationPanel = document.getElementById('notificationPanel');
        
        if (notificationBtn) {
            notificationBtn.addEventListener('click', () => {
                if (notificationPanel) {
                    notificationPanel.classList.toggle('active');
                    if (notificationPanel.classList.contains('active')) {
                        this.markAllAsRead();
                    }
                }
            });
        }
        
        // „Çµ„Ç§„Éâ„Éê„Éº„ÅÆÈÄöÁü•„É°„Éã„É•„Éº
        const sidebarNotification = document.querySelector('.sidebar-menu a[href*="notification"]');
        if (sidebarNotification) {
            const badge = document.createElement('span');
            badge.className = 'notification-badge';
            badge.style.cssText = `
                background: #ff4444;
                color: white;
                border-radius: 10px;
                padding: 2px 6px;
                font-size: 12px;
                margin-left: 10px;
                display: none;
            `;
            badge.id = 'sidebarNotificationBadge';
            sidebarNotification.appendChild(badge);
        }
    }

    /**
     * „Éù„Éº„É™„É≥„Ç∞„ÇíÈñãÂßã
     */
    startPolling() {
        if (this.isPolling) return;
        
        this.isPolling = true;
        
        // Âç≥Â∫ß„Å´‰∏ÄÂ∫¶„ÉÅ„Çß„ÉÉ„ÇØ
        this.checkNewReservations();
        
        // 10Áßí„Åî„Å®„Å´„ÉÅ„Çß„ÉÉ„ÇØ
        this.pollInterval = setInterval(() => {
            this.checkNewReservations();
        }, 10000);
        
        console.log('üîÑ Polling started - checking every 10 seconds');
    }

    /**
     * „Éù„Éº„É™„É≥„Ç∞„ÇíÂÅúÊ≠¢
     */
    stopPolling() {
        if (this.pollInterval) {
            clearInterval(this.pollInterval);
            this.pollInterval = null;
        }
        this.isPolling = false;
        console.log('‚èπÔ∏è Polling stopped');
    }

    /**
     * Êñ∞„Åó„ÅÑ‰∫àÁ¥Ñ„Çí„ÉÅ„Çß„ÉÉ„ÇØ
     */
    async checkNewReservations() {
        try {
            const response = await fetch(`/api/reservations/new?since=${this.lastCheckTime}`);
            if (!response.ok) throw new Error('Failed to fetch new reservations');
            
            const data = await response.json();
            
            if (data.reservations && data.reservations.length > 0) {
                console.log(`üì® Found ${data.reservations.length} new reservation(s)`);
                
                for (const reservation of data.reservations) {
                    // LINE„Åã„Çâ„ÅÆ‰∫àÁ¥Ñ„ÅÆ„ÅøÈÄöÁü•
                    if (reservation.source === 'LINE' || reservation.line_user_id) {
                        this.addNotification({
                            id: reservation.id,
                            type: 'new_reservation',
                            title: 'Êñ∞„Åó„ÅÑ‰∫àÁ¥Ñ„ÅåÂÖ•„Çä„Åæ„Åó„Åü',
                            message: `${reservation.customer_name}Êßò - ${reservation.date} ${reservation.time} (${reservation.people}Âêç)`,
                            timestamp: reservation.created_at,
                            data: reservation,
                            source: 'LINE'
                        });
                    }
                }
                
                // ÊúÄÁµÇ„ÉÅ„Çß„ÉÉ„ÇØÊôÇÂàª„ÇíÊõ¥Êñ∞
                this.lastCheckTime = new Date().toISOString();
            }
        } catch (error) {
            console.error('‚ùå Error checking new reservations:', error);
        }
    }

    /**
     * ÈÄöÁü•„ÇíËøΩÂä†
     */
    addNotification(notification) {
        // ÈáçË§á„ÉÅ„Çß„ÉÉ„ÇØ
        if (this.notifications.find(n => n.id === notification.id)) {
            return;
        }
        
        // ÈÄöÁü•„ÇíËøΩÂä†
        notification.read = false;
        notification.timestamp = notification.timestamp || new Date().toISOString();
        this.notifications.unshift(notification);
        this.unreadCount++;
        
        // UI„ÇíÊõ¥Êñ∞
        this.updateBadge();
        this.updateNotificationList();
        
        // Èü≥„ÇíÈ≥¥„Çâ„Åô
        this.playNotificationSound();
        
        // „Éñ„É©„Ç¶„Ç∂ÈÄöÁü•„ÇíË°®Á§∫
        this.showBrowserNotification(notification);
        
        // „Éù„ÉÉ„Éó„Ç¢„ÉÉ„ÉóÈÄöÁü•„ÇíË°®Á§∫
        this.showPopupNotification(notification);
        
        // „É≠„Éº„Ç´„É´„Çπ„Éà„É¨„Éº„Ç∏„Å´‰øùÂ≠ò
        this.saveNotifications();
    }

    /**
     * „Éñ„É©„Ç¶„Ç∂ÈÄöÁü•„ÇíË°®Á§∫
     */
    showBrowserNotification(notification) {
        if ('Notification' in window && Notification.permission === 'granted') {
            const browserNotif = new Notification(notification.title, {
                body: notification.message,
                icon: '/images/line-icon.png',
                badge: '/images/badge.png',
                tag: notification.id,
                requireInteraction: true
            });
            
            browserNotif.onclick = () => {
                window.focus();
                // ‰∫àÁ¥ÑË©≥Á¥∞„ÇíÈñã„Åè
                if (notification.data) {
                    this.openReservationDetail(notification.data);
                }
                browserNotif.close();
            };
        }
    }

    /**
     * „Éù„ÉÉ„Éó„Ç¢„ÉÉ„ÉóÈÄöÁü•„ÇíË°®Á§∫
     */
    showPopupNotification(notification) {
        // Êó¢Â≠ò„ÅÆ„Éù„ÉÉ„Éó„Ç¢„ÉÉ„Éó„ÇíÂâäÈô§
        const existing = document.getElementById('notification-popup');
        if (existing) {
            existing.remove();
        }
        
        const popup = document.createElement('div');
        popup.id = 'notification-popup';
        popup.className = 'notification-popup';
        popup.style.cssText = `
            position: fixed;
            top: 20px;
            right: 20px;
            max-width: 400px;
            background: white;
            border-radius: 10px;
            box-shadow: 0 4px 20px rgba(0,0,0,0.2);
            padding: 20px;
            z-index: 10000;
            animation: slideIn 0.3s ease-out;
        `;
        
        // LINE„Ç¢„Ç§„Ç≥„É≥
        const icon = notification.source === 'LINE' ? 'üí¨' : 'üîî';
        
        popup.innerHTML = `
            <div style="display: flex; align-items: center; margin-bottom: 10px;">
                <span style="font-size: 24px; margin-right: 10px;">${icon}</span>
                <h4 style="margin: 0; color: #333;">${notification.title}</h4>
                <button onclick="this.parentElement.parentElement.remove()" style="
                    margin-left: auto;
                    background: none;
                    border: none;
                    font-size: 20px;
                    cursor: pointer;
                    color: #999;
                ">√ó</button>
            </div>
            <p style="color: #666; margin: 0 0 10px 0;">${notification.message}</p>
            <div style="display: flex; gap: 10px;">
                <button onclick="window.notificationSystem.openReservationDetail('${notification.id}')" style="
                    background: #667eea;
                    color: white;
                    border: none;
                    padding: 8px 16px;
                    border-radius: 5px;
                    cursor: pointer;
                    font-size: 14px;
                ">Ë©≥Á¥∞„ÇíË¶ã„Çã</button>
                <button onclick="this.parentElement.parentElement.remove()" style="
                    background: #f0f0f0;
                    color: #666;
                    border: none;
                    padding: 8px 16px;
                    border-radius: 5px;
                    cursor: pointer;
                    font-size: 14px;
                ">Èñâ„Åò„Çã</button>
            </div>
        `;
        
        // „Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥Áî®„ÅÆ„Çπ„Çø„Ç§„É´
        const style = document.createElement('style');
        style.textContent = `
            @keyframes slideIn {
                from {
                    transform: translateX(400px);
                    opacity: 0;
                }
                to {
                    transform: translateX(0);
                    opacity: 1;
                }
            }
        `;
        document.head.appendChild(style);
        
        document.body.appendChild(popup);
        
        // 10ÁßíÂæå„Å´Ëá™Âãï„ÅßÊ∂à„Åô
        setTimeout(() => {
            if (popup.parentElement) {
                popup.style.animation = 'slideOut 0.3s ease-out';
                setTimeout(() => popup.remove(), 300);
            }
        }, 10000);
    }

    /**
     * ‰∫àÁ¥ÑË©≥Á¥∞„ÇíÈñã„Åè
     */
    openReservationDetail(reservationData) {
        // ‰∫àÁ¥ÑID„ÅåÊñáÂ≠óÂàó„ÅÆÂ†¥Âêà„ÅØ„Éë„Éº„Çπ
        if (typeof reservationData === 'string') {
            const notification = this.notifications.find(n => n.id === reservationData);
            if (notification && notification.data) {
                reservationData = notification.data;
            } else {
                console.error('Reservation data not found');
                return;
            }
        }
        
        // Á∑®ÈõÜ„É¢„Éº„ÉÄ„É´„ÇíÈñã„Åè
        if (window.openReservationEditModal) {
            window.openReservationEditModal(reservationData);
        } else {
            console.log('Opening reservation detail:', reservationData);
            // „Éï„Ç©„Éº„É´„Éê„ÉÉ„ÇØÔºö‰∫àÁ¥ÑË©≥Á¥∞„Éö„Éº„Ç∏„Å´ÈÅ∑Áßª
            window.location.href = `/admin-full-featured.html#reservation=${reservationData.id}`;
        }
    }

    /**
     * ÈÄöÁü•Èü≥„ÇíÈ≥¥„Çâ„Åô
     */
    playNotificationSound() {
        try {
            // „Çà„ÇäËâØ„ÅÑÈÄöÁü•Èü≥
            const audioContext = new (window.AudioContext || window.webkitAudioContext)();
            const oscillator = audioContext.createOscillator();
            const gainNode = audioContext.createGain();
            
            oscillator.connect(gainNode);
            gainNode.connect(audioContext.destination);
            
            oscillator.frequency.value = 800;
            oscillator.type = 'sine';
            
            gainNode.gain.setValueAtTime(0.3, audioContext.currentTime);
            gainNode.gain.exponentialRampToValueAtTime(0.01, audioContext.currentTime + 0.5);
            
            oscillator.start(audioContext.currentTime);
            oscillator.stop(audioContext.currentTime + 0.5);
        } catch (error) {
            console.log('Could not play notification sound:', error);
        }
    }

    /**
     * „Éê„ÉÉ„Ç∏„ÇíÊõ¥Êñ∞
     */
    updateBadge() {
        // „Éò„ÉÉ„ÉÄ„Éº„ÅÆ„Éê„ÉÉ„Ç∏
        const headerBadge = document.getElementById('notificationBadge');
        if (headerBadge) {
            headerBadge.textContent = this.unreadCount;
            headerBadge.style.display = this.unreadCount > 0 ? 'inline-block' : 'none';
        }
        
        // „Çµ„Ç§„Éâ„Éê„Éº„ÅÆ„Éê„ÉÉ„Ç∏
        const sidebarBadge = document.getElementById('sidebarNotificationBadge');
        if (sidebarBadge) {
            sidebarBadge.textContent = this.unreadCount;
            sidebarBadge.style.display = this.unreadCount > 0 ? 'inline-block' : 'none';
        }
        
        // „Éñ„É©„Ç¶„Ç∂„Çø„Ç§„Éà„É´„ÇíÊõ¥Êñ∞
        if (this.unreadCount > 0) {
            document.title = `(${this.unreadCount}) ‰∫àÁ¥ÑÁÆ°ÁêÜ„Ç∑„Çπ„ÉÜ„É†`;
        } else {
            document.title = '‰∫àÁ¥ÑÁÆ°ÁêÜ„Ç∑„Çπ„ÉÜ„É†';
        }
    }

    /**
     * ÈÄöÁü•„É™„Çπ„Éà„ÇíÊõ¥Êñ∞
     */
    updateNotificationList() {
        const notificationList = document.getElementById('notificationList');
        if (!notificationList) return;
        
        if (this.notifications.length === 0) {
            notificationList.innerHTML = '<p style="text-align: center; color: #999;">ÈÄöÁü•„ÅØ„ÅÇ„Çä„Åæ„Åõ„Çì</p>';
            return;
        }
        
        notificationList.innerHTML = this.notifications.map(notif => {
            const timeAgo = this.getTimeAgo(notif.timestamp);
            const icon = notif.source === 'LINE' ? 'üí¨' : 'üîî';
            const unreadStyle = notif.read ? '' : 'background: #f0f7ff;';
            
            return `
                <div class="notification-item" style="
                    padding: 15px;
                    border-bottom: 1px solid #eee;
                    cursor: pointer;
                    transition: background 0.3s;
                    ${unreadStyle}
                " onclick="window.notificationSystem.openReservationDetail('${notif.id}')">
                    <div style="display: flex; align-items: center; margin-bottom: 5px;">
                        <span style="font-size: 20px; margin-right: 10px;">${icon}</span>
                        <strong>${notif.title}</strong>
                        <span style="margin-left: auto; color: #999; font-size: 12px;">${timeAgo}</span>
                    </div>
                    <p style="margin: 0; color: #666; font-size: 14px;">${notif.message}</p>
                </div>
            `;
        }).join('');
    }

    /**
     * ÁµåÈÅéÊôÇÈñì„ÇíÂèñÂæó
     */
    getTimeAgo(timestamp) {
        const now = new Date();
        const time = new Date(timestamp);
        const diff = Math.floor((now - time) / 1000); // ÁßíÂçò‰Ωç
        
        if (diff < 60) return '„Åü„Å£„Åü‰ªä';
        if (diff < 3600) return `${Math.floor(diff / 60)}ÂàÜÂâç`;
        if (diff < 86400) return `${Math.floor(diff / 3600)}ÊôÇÈñìÂâç`;
        return `${Math.floor(diff / 86400)}Êó•Ââç`;
    }

    /**
     * „Åô„Åπ„Å¶Êó¢Ë™≠„Å´„Åô„Çã
     */
    markAllAsRead() {
        this.notifications.forEach(notif => notif.read = true);
        this.unreadCount = 0;
        this.updateBadge();
        this.saveNotifications();
    }

    /**
     * ÈÄöÁü•„Çí‰øùÂ≠ò
     */
    saveNotifications() {
        try {
            // ÊúÄÊñ∞100‰ª∂„ÅÆ„Åø‰øùÂ≠ò
            const toSave = this.notifications.slice(0, 100);
            localStorage.setItem('reservation_notifications', JSON.stringify(toSave));
        } catch (error) {
            console.error('Failed to save notifications:', error);
        }
    }

    /**
     * ÈÄöÁü•„ÇíË™≠„ÅøËæº„Åø
     */
    async loadNotifications() {
        try {
            const saved = localStorage.getItem('reservation_notifications');
            if (saved) {
                this.notifications = JSON.parse(saved);
                this.unreadCount = this.notifications.filter(n => !n.read).length;
                this.updateBadge();
                this.updateNotificationList();
            }
        } catch (error) {
            console.error('Failed to load notifications:', error);
        }
    }

    /**
     * „ÉÜ„Çπ„ÉàÈÄöÁü•„ÇíÈÄÅ‰ø°Ôºà„Éá„Éê„ÉÉ„Ç∞Áî®Ôºâ
     */
    testNotification() {
        this.addNotification({
            id: 'test-' + Date.now(),
            type: 'new_reservation',
            title: '„ÉÜ„Çπ„Éà: Êñ∞„Åó„ÅÑ‰∫àÁ¥Ñ„ÅåÂÖ•„Çä„Åæ„Åó„Åü',
            message: '„ÉÜ„Çπ„ÉàÂ§™ÈÉéÊßò - 2025/09/02 18:00 (2Âêç)',
            timestamp: new Date().toISOString(),
            source: 'LINE',
            data: {
                id: 'test-' + Date.now(),
                customer_name: '„ÉÜ„Çπ„ÉàÂ§™ÈÉé',
                date: '2025-09-02',
                time: '18:00',
                people: 2,
                line_user_id: 'test123'
            }
        });
    }
}

// „Ç∞„É≠„Éº„Éê„É´„Ç§„É≥„Çπ„Çø„É≥„Çπ„Çí‰ΩúÊàê
window.notificationSystem = new NotificationSystem();

// „Éö„Éº„Ç∏„É≠„Éº„ÉâÂæå„Å´ÂàùÊúüÂåñ
if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', () => {
        window.notificationSystem.init();
    });
} else {
    window.notificationSystem.init();
}

console.log('üì± Notification System loaded - use window.notificationSystem.testNotification() to test');